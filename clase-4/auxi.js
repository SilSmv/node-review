function processData (input) {
  const combinantionArray = []
  const n = Number(input)

  for (let x = 0; x < n; x++) {
    for (let y = 0; y < n; y++) {
      for (let z = 0; z < n; z++) {
        combinantionArray.push([x, y, z])
      }
    }
  }
  let arrayFinish = singleCombination(combinantionArray, 0, n)
  let sum = arrayFinish.length
  for (let j = 0; j < combinantionArray.length; j++) {
    const result = singleCombination(combinantionArray, j, n)
    if (result.length > sum) {
      sum = result.length
      arrayFinish = result
    }
  }

  console.log(arrayFinish.length)
  console.log(combinantionArray.length)
  for (let i = 0; i < arrayFinish.length; i++) {
    console.log(arrayFinish[i][0] + ' ' + arrayFinish[i][1] + ' ' + arrayFinish[i][2])
  }
}
function singleCombination (array, j, n) {
  const arrayx = []
  const arrayy = []
  const arrayz = []
  const result = []
  arrayx.push(array[j][0])
  arrayy.push(array[j][1])
  arrayz.push(array[j][2])
  result.push(array[j])
  for (let i = 0; i < array.length; i++) {
    const x = array[i][0]
    const y = array[i][1]
    const z = array[i][2]
    if (x !== y && z !== y && x !== z && (x + y + z) === n &&
                !arrayx.includes(x) &&
                !arrayy.includes(y) &&
                !arrayz.includes(z)) {
      result.push([x, y, z])
      arrayx.push(x)
      arrayy.push(y)
      arrayz.push(z)
    }
  }
  return result
}
processData('13')
// n=275
// 184
// 0 93 182
// 1 94 180
// 2 95 178
// 3 96 176
// 4 97 174
// 5 98 172
// 6 99 170
// 7 100 168
// 8 101 166
// 9 102 164
// 10 103 162
// 11 104 160
// 12 105 158
// 13 106 156
// 14 107 154
// 15 108 152
// 16 109 150
// 17 110 148
// 18 111 146
// 19 112 144
// 20 113 142
// 21 114 140
// 22 115 138
// 23 116 136
// 24 117 134
// 25 118 132
// 26 119 130
// 27 120 128
// 28 121 126
// 29 122 124
// 30 123 122
// 31 124 120
// 32 125 118
// 33 126 116
// 34 127 114
// 35 128 112
// 36 129 110
// 37 130 108
// 38 131 106
// 39 132 104
// 40 133 102
// 41 134 100
// 42 135 98
// 43 136 96
// 44 137 94
// 45 138 92
// 46 139 90
// 47 140 88
// 48 141 86
// 49 142 84
// 50 143 82
// 51 144 80
// 52 145 78
// 53 146 76
// 54 147 74
// 55 148 72
// 56 149 70
// 57 150 68
// 58 151 66
// 59 152 64
// 60 153 62
// 61 154 60
// 62 155 58
// 63 156 56
// 64 157 54
// 65 158 52
// 66 159 50
// 67 160 48
// 68 161 46
// 69 162 44
// 70 163 42
// 71 164 40
// 72 165 38
// 73 166 36
// 74 167 34
// 75 168 32
// 76 169 30
// 77 170 28
// 78 171 26
// 79 172 24
// 80 173 22
// 81 174 20
// 82 175 18
// 83 176 16
// 84 177 14
// 85 178 12
// 86 179 10
// 87 180 8
// 88 181 6
// 89 182 4
// 90 183 2
// 91 184 0
// 92 0 183
// 93 1 181
// 94 2 179
// 95 3 177
// 96 4 175
// 97 5 173
// 98 6 171
// 99 7 169
// 100 8 167
// 101 9 165
// 102 10 163
// 103 11 161
// 104 12 159
// 105 13 157
// 106 14 155
// 107 15 153
// 108 16 151
// 109 17 149
// 110 18 147
// 111 19 145
// 112 20 143
// 113 21 141
// 114 22 139
// 115 23 137
// 116 24 135
// 117 25 133
// 118 26 131
// 119 27 129
// 120 28 127
// 121 29 125
// 122 30 123
// 123 31 121
// 124 32 119
// 125 33 117
// 126 34 115
// 127 35 113
// 128 36 111
// 129 37 109
// 130 38 107
// 131 39 105
// 132 40 103
// 133 41 101
// 134 42 99
// 135 43 97
// 136 44 95
// 137 45 93
// 138 46 91
// 139 47 89
// 140 48 87
// 141 49 85
// 142 50 83
// 143 51 81
// 144 52 79
// 145 53 77
// 146 54 75
// 147 55 73
// 148 56 71
// 149 57 69
// 150 58 67
// 151 59 65
// 152 60 63
// 153 61 61
// 154 62 59
// 155 63 57
// 156 64 55
// 157 65 53
// 158 66 51
// 159 67 49
// 160 68 47
// 161 69 45
// 162 70 43
// 163 71 41
// 164 72 39
// 165 73 37
// 166 74 35
// 167 75 33
// 168 76 31
// 169 77 29
// 170 78 27
// 171 79 25
// 172 80 23
// 173 81 21
// 174 82 19
// 175 83 17
// 176 84 15
// 177 85 13
// 178 86 11
// 179 87 9
// 180 88 7
// 181 89 5
// 182 90 3
// 183 91 1

// n = 194

// 130
// 0 66 128
// 1 67 126
// 2 68 124
// 3 69 122
// 4 70 120
// 5 71 118
// 6 72 116
// 7 73 114
// 8 74 112
// 9 75 110
// 10 76 108
// 11 77 106
// 12 78 104
// 13 79 102
// 14 80 100
// 15 81 98
// 16 82 96
// 17 83 94
// 18 84 92
// 19 85 90
// 20 86 88
// 21 87 86
// 22 88 84
// 23 89 82
// 24 90 80
// 25 91 78
// 26 92 76
// 27 93 74
// 28 94 72
// 29 95 70
// 30 96 68
// 31 97 66
// 32 98 64
// 33 99 62
// 34 100 60
// 35 101 58
// 36 102 56
// 37 103 54
// 38 104 52
// 39 105 50
// 40 106 48
// 41 107 46
// 42 108 44
// 43 109 42
// 44 110 40
// 45 111 38
// 46 112 36
// 47 113 34
// 48 114 32
// 49 115 30
// 50 116 28
// 51 117 26
// 52 118 24
// 53 119 22
// 54 120 20
// 55 121 18
// 56 122 16
// 57 123 14
// 58 124 12
// 59 125 10
// 60 126 8
// 61 127 6
// 62 128 4
// 63 129 2
// 64 130 0
// 65 0 129
// 66 1 127
// 67 2 125
// 68 3 123
// 69 4 121
// 70 5 119
// 71 6 117
// 72 7 115
// 73 8 113
// 74 9 111
// 75 10 109
// 76 11 107
// 77 12 105
// 78 13 103
// 79 14 101
// 80 15 99
// 81 16 97
// 82 17 95
// 83 18 93
// 84 19 91
// 85 20 89
// 86 21 87
// 87 22 85
// 88 23 83
// 89 24 81
// 90 25 79
// 91 26 77
// 92 27 75
// 93 28 73
// 94 29 71
// 95 30 69
// 96 31 67
// 97 32 65
// 98 33 63
// 99 34 61
// 100 35 59
// 101 36 57
// 102 37 55
// 103 38 53
// 104 39 51
// 105 40 49
// 106 41 47
// 107 42 45
// 108 43 43
// 109 44 41
// 110 45 39
// 111 46 37
// 112 47 35
// 113 48 33
// 114 49 31
// 115 50 29
// 116 51 27
// 117 52 25
// 118 53 23
// 119 54 21
// 120 55 19
// 121 56 17
// 122 57 15
// 123 58 13
// 124 59 11
// 125 60 9
// 126 61 7
// 127 62 5
// 128 63 3
// 129 64 1

// n=3:

// 3
// 0 1 2
// 2 0 1
// 1 2 0

// n=13
// 9
// 0 4 9
// 1 5 7
// 2 6 5
// 3 7 3
// 4 8 1
// 5 0 8
// 6 1 6
// 7 2 4
// 8 3 2
